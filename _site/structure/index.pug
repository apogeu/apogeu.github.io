extends ../../_layouts/default

block title
    +title('App structure')

block defer
    script(src="/assets/javascripts/structure.js")

block content
    .structure
        .menu-centered
            ul.menu
                li
                    a(href="/concepts") Concepts
                li.active
                    a(href="/structure") App structure
                li
                    a(href="/technology") Technology
        .row
            .medium-3.columns
                ul#menu-structure.vertical.menu(data-accordion-menu data-multi-open="false")
                    li
                        a(href="#app") app
                        ul.menu.vertical.nested
                            li
                                a(href="#assets") assets
                                ul.menu.vertical.nested
                                    li
                                        a(href="#images") images
                                        ul.menu.vertical.nested
                                            li
                                                a(href="#gitkeep") .gitkeep
                                    li
                                        a(href="#javascripts") javascripts
                                        ul.menu.vertical.nested
                                            li
                                                a(href="#gitkeep") .gitkeep
                                    li
                                        a(href="#stylesheets") stylesheets
                                        ul.menu.vertical.nested
                                            li
                                                a(href="#stylesheets-style") style.styl
                            li
                                a(href="#controllers") controllers
                                ul.menu.vertical.nested
                                    li
                                        a(href="#controllers-homepages") homepages.js
                                    li
                                        a(href="#controllers-users") users.js
                            li
                                a(href="#i18n") i18n
                                ul.menu.vertical.nested
                                    li
                                        a(href="#i18n-en") en.json
                            li
                                a(href="#middlewares") middlewares
                                ul.menu.vertical.nested
                                    li
                                        a(href="#middlewares-log") log.js
                            li
                                a(href="#models") models
                                ul.menu.vertical.nested
                                    li
                                        a(href="#models-user") user.js
                            li
                                a(href="#services") services
                                ul.menu.vertical.nested
                                    li
                                        a(href="#services-users") users.js
                            li
                                a(href="#views") views
                                ul.menu.vertical.nested
                                    li
                                        a(href="#views-error") error.pug
                                    li
                                        a(href="#views-index") index.pug
                                    li
                                        a(href="#views-layout") layout.pug
                    li
                        a(href="#config") config
                        ul.menu.vertical.nested
                            li
                                a(href="#config-scaffold") scaffold
                                ul.menu.vertical.nested
                                    li
                                        a(href="#config-scaffold-controller") controller
                                    li
                                        a(href="#config-scaffold-controllerCrud") controllerCrud
                                    li
                                        a(href="#config-scaffold-middleware") middleware
                                    li
                                        a(href="#config-scaffold-model") model
                                    li
                                        a(href="#config-scaffold-service") service
                            li
                                a(href="#config-database") database.js
                            li
                                a(href="#config-envs") envs.js
                            li
                                a(href="#config-routes") routes.js
                    li
                        a(href="#public") public
                        ul.menu.vertical.nested
                            li
                                a(href="#public-stylesheets") stylesheets
                                ul.menu.vertical.nested
                                    li
                                        a(href="#public-stylesheets-style") style.css
                    li
                        a(href="#test") test
                        ul.menu.vertical.nested
                            li
                                a(href="#integration") integration
                                ul.menu.vertical.nested
                                    li
                                        a(href="#integration-user") user.test.js
                            li
                                a(href="#unit") unit
                                ul.menu.vertical.nested
                                    li
                                        a(href="#unit-user") user.test.js
                    li
                        a(href="#editorconfig") .editorconfig
                    li
                        a(href="#gitignore") .gitignore
                    li
                        a(href="#index") index.js
                    li
                        a(href="#package") package.json
                    li
                        a(href="#readme") README.md
                    li
                        a(href="#yarn") yarn.lock
            .medium-9.columns
                #gitkeep.tabs-panel
                    h4 gitkeep
                    p Git does not track empty directory. In order to track a directory, a file must exist within it. The trick that many people use is to create a hidden file usually called .gitkeep. The name of the file does not matter. As long as there is a file in the directory .gitkeep, readme.txt etc, git will track directory.

                #app.tabs-panel
                    h4 App
                    p One of the main directories. Here you will find all the development structures of your application.

                #assets.tabs-panel
                    h4 Assets
                    p Directory where all assets files are located.

                #images.tabs-panel
                    h4 Images
                    p Directory where all images are located.

                #javascripts.tabs-panel
                    h4 JavaScripts
                    p Directory where all JavaScript files are located.

                #stylesheets.tabs-panel
                    h4 Stylesheets
                    p Directory where all Stylus files are located.

                #stylesheets-style.tabs-panel
                    h4 style.styl
                    p Stylus file example.
                    include ../../_includes/files/style

                #controllers.tabs-panel
                    h4 Controllers
                    p Directory where all controllers files are located.

                #controllers-homepages.tabs-panel
                    h4 HomepagesController
                    p Controller file example rendering a view.
                    a(href="/concepts/#controllers" target="_blank") See more at here
                    include ../../_includes/files/homepageController

                #controllers-users.tabs-panel
                    h4 UsersController
                    p Controller file example CRUD api.
                    a(href="/concepts/#controllers" target="_blank") See more at here
                    include ../../_includes/files/userController

                #i18n.tabs-panel
                    h4 i18n
                    p Directory where all translation files are located.

                #i18n-en.tabs-panel
                    h4 en.json
                    p Translation file example.
                    a(href="https://www.npmjs.com/package/i18n" target="_blank") See more at here
                    include ../../_includes/files/i18n

                #middlewares.tabs-panel
                    h4 Middlewares
                    p Directory where all middlewares files are located.

                #middlewares-log.tabs-panel
                    h4 LogMiddleware
                    p Middleware file example.
                    a(href="/concepts/#middlewares" target="_blank") See more at here
                    include ../../_includes/files/logMiddleware

                #models.tabs-panel
                    h4 Models
                    p Directory where all models files are located.

                #models-user.tabs-panel
                    h4 UserModel
                    p Model file example.
                    a(href="/concepts/#models" target="_blank") See more at here
                    include ../../_includes/files/userModel

                #services.tabs-panel
                    h4 Services
                    p Directory where all services files are located.

                #services-users.tabs-panel
                    h4 UsersService
                    p Service file example CRUD.
                    a(href="/concepts/#services" target="_blank") See more at here
                    include ../../_includes/files/userService

                #views.tabs-panel
                    h4 Views
                    p Directory where all views (pug) files are located.

                #views-error.tabs-panel
                    h4 error.pug
                    p Error page example.
                    a(href="/concepts/#views" target="_blank") See more at here
                    include ../../_includes/files/errorView

                #views-index.tabs-panel
                    h4 index.pug
                    p Index page example.
                    a(href="/concepts/#views" target="_blank") See more at here
                    include ../../_includes/files/indexView

                #views-layout.tabs-panel
                    h4 layout.pug
                    p Layout example.
                    a(href="/concepts/#views" target="_blank") See more at here
                    include ../../_includes/files/layoutView

                #config.tabs-panel
                    h4 Config
                    p Directory where all config files are located

                #config-scaffold.tabs-panel
                    h4 Scaffold
                    p Directory where all scaffold files are located
                    a(href="/concepts/#scaffold" target="_blank") See more at here

                #config-scaffold-controller.tabs-panel
                    h4 Scaffold controller
                    p Scaffold to create a new controller
                    a(href="/concepts/#scaffold" target="_blank") See more at here
                    include ../../_includes/files/scaffold-controller

                #config-scaffold-controllerCrud.tabs-panel
                    h4 Scaffold controllerCrud
                    p Scaffold to create a new controller crud
                    a(href="/concepts/#scaffold" target="_blank") See more at here
                    include ../../_includes/files/scaffold-controller-crud

                #config-scaffold-middleware.tabs-panel
                    h4 Scaffold middleware
                    p Scaffold to create a new middleware
                    a(href="/concepts/#scaffold" target="_blank") See more at here
                    include ../../_includes/files/scaffold-middleware

                #config-scaffold-model.tabs-panel
                    h4 Scaffold model
                    p Scaffold to create a new model
                    a(href="/concepts/#scaffold" target="_blank") See more at here
                    include ../../_includes/files/scaffold-model

                #config-scaffold-service.tabs-panel
                    h4 Scaffold service
                    p Scaffold to create a new service
                    a(href="/concepts/#scaffold" target="_blank") See more at here
                    include ../../_includes/files/scaffold-service

                #config-database.tabs-panel
                    h4 Database
                    p Here your database is defined. By default in #{ apogeu } the database is #[a(href="https://www.mongodb.com" target="_blank") MongoDB] using the #[a(href="http://mongoosejs.com" target="_blank") Mongoose] module.
                    p See default file:
                    include ../../_includes/files/database

                #config-envs.tabs-panel
                    h4 Envs
                    p Here is where all environments are declared
                    h5 All possible environments:
                    -
                        var envs = [
                            {
                                name: 'node_env',
                                type: 'String',
                                default: 'development',
                                description: 'The environment definition of your application. Possible values: development | test | production.',
                            },
                            {
                                name: 'timestamps',
                                type: 'Boolean',
                                default: true,
                                description: 'Enable ou disable the mongoose timestamps. See more in <a href="https://www.npmjs.com/package/mongoose-timestamp" target="_blank">mongoose-timestamp</a>. Possible values: true | false.',
                            },
                            {
                                name: 'mongodb',
                                type: 'String',
                                default: 'mongodb://localhost:27017/apogeu',
                                description: 'Mongoose uri connection. See more in <a href="http://mongoosejs.com/docs/connections.html">mongoose connections</a>.',
                            },
                            {
                                name: 'port',
                                type: 'Number',
                                default: 3000,
                                description: 'Port setting for your application.',
                            },
                            {
                                name: 'logger',
                                type: 'String',
                                default: 'dev',
                                description: 'HTTP request logger middleware for node.js. See more in <a href="https://www.npmjs.com/package/morgan" target="_blank">morgan</a>',
                            },
                            {
                                name: 'cluster',
                                type: 'Number',
                                default: 'Number of your cpu',
                                description: 'The cluster module allows you to easily create child processes that all share server ports. See more in <a href="https://nodejs.org/dist/latest-v7.x/docs/api/cluster.html" target="_blank">nodejs cluster</a>',
                            },
                        ]
                    .table-scroll
                        table
                            thead
                                tr
                                    th Name
                                    th Type
                                    th Default value
                                    th Description
                            tbody
                                each env in envs
                                    tr
                                        td #{ env.name }
                                        td #{ env.type }
                                        td #{ env.default }
                                        td !{ env.description }
                    p See default file:
                    include ../../_includes/files/envs

                #config-routes.tabs-panel
                    h4 Routes
                    p Here is where all routes are declared
                    p See default file:
                    include ../../_includes/files/routes

                #public.tabs-panel
                    h4 Public
                    p Directory where all public files are located

                #public-stylesheets.tabs-panel
                    h4 Stylesheets
                    p Directory where all css files are located.
                    b All Stylus files are compiled to this location.

                #public-stylesheets-style.tabs-panel
                    h4 style.css
                    include ../../_includes/files/style-css

                #test.tabs-panel
                    h4 test
                    p Directory where all tests are created

                #integration.tabs-panel
                    h4 integration
                    p Directory where all integration tests are created
                    p A integration test can be executed with the #[code apogeu test integration] command:
                    pre
                        code.bash $ apogeu test integration
                    p Example output console:
                    pre
                        code.bash
                            | info: Mongoose default connection open to mongodb://localhost:27017/apogeu
                            | info: Mongoose default connection is open
                            | info: running integration tests
                            | info: Application listening on port 3000
                            |
                            | Mongoose: users.find({}, { limit: undefined, skip: undefined, fields: {} })
                            |   ✓ list users
                            |
                            |   1 passing (58ms)

                #integration-user.tabs-panel
                    p Example integration test:
                    include ../../_includes/files/test-integration

                #unit.tabs-panel
                    h4 unit
                    p Directory where all unit tests are created
                    p A unit test can be executed with the #[code apogeu test unit] command:
                    pre
                        code.bash $ apogeu test unit
                    p Example output console:
                    pre
                        code.bash
                            | info: running unit tests
                            |
                            | ✓ user service is an object
                            |
                            | 1 passing (7ms)

                #unit-user.tabs-panel
                    p Example unit test:
                    include ../../_includes/files/test-unit

                #editorconfig.tabs-panel
                    h4
                        a(href="http://editorconfig.org") .editorconfig
                    p EditorConfig helps developers define and maintain consistent coding styles between different editors and IDEs. The EditorConfig project consists of a file format for defining coding styles and a collection of text editor plugins that enable editors to read the file format and adhere to defined styles.
                    p EditorConfig files are easily readable and they work nicely with version control systems.
                    include ../../_includes/files/editorconfig

                #gitignore.tabs-panel
                    h4
                        a(href="https://git-scm.com/docs/gitignore") .gitignore
                    p A gitignore file specifies intentionally untracked files that Git should ignore. Files already tracked by Git are not affected.
                    include ../../_includes/files/gitignore

                #index.tabs-panel
                    h4 index.js
                    p In #{ apogeu }, #[code index.js] is invoked at initialization where it receives parameter #[a(href="http://expressjs.com/en/4x/api.html#app") app]
                    include ../../_includes/files/index
                    
                #package.tabs-panel
                    h4 package.json
                    p A package.json file affords you a lot of great things:
                    ul
                        li It serves as documentation for what packages your project depends on.
                        li It allows you to specify the versions of a package that your project can use using semantic versioning rules.
                        li Makes your build reproducible which means that its way easier to share with other developers.
                    p See more in:
                    p
                        a(href="https://docs.npmjs.com/getting-started/using-a-package.json" target="_blank") Using a package.json
                    p
                        a(href="https://docs.npmjs.com/files/package.json" target="_blank") Specifics of npm's package.json handling
                    p Default file:
                    include ../../_includes/files/package

                #readme.tabs-panel
                    h4
                        a(href="https://help.github.com/articles/about-readmes/") README.md
                    p A README file, along with a repository license, contribution guidelines, and a code of conduct, helps you communicate expectations for and manage contributions to your project.


                #yarn.tabs-panel
                    h4
                        a(href="https://yarnpkg.com") yarn.lock
                    p Yarn is a package manager for your code. It allows you to use and share code with other developers from around the world. Yarn does this quickly, securely, and reliably so you don’t ever have to worry.
